# Core Properties #
nifi.version=0.7.0
nifi.flow.configuration.file=./conf/config.yml
nifi.administrative.yield.duration=30 sec
# If a component has no work to do (is "bored"), how long should we wait before checking again for work?
nifi.bored.yield.duration=100 millis

# Provenance Repository #
nifi.provenance.repository.directory.default=${MINIFI_HOME}/provenance_repository
nifi.provenance.repository.max.storage.time=1 MIN
nifi.provenance.repository.max.storage.size=1 MB
nifi.flowfile.repository.directory.default=${MINIFI_HOME}/flowfile_repository
nifi.database.content.repository.directory.default=${MINIFI_HOME}/content_repository
nifi.provenance.repository.class.name=NoOpRepository

# Disk space watchdog #
## Stops MiNiFi FlowController activity (excluding C2), when the available disk space on either of the repository
## volumes go below stop.threshold.bytes, checked every interval.ms, then restarts when the available space on all
## repository volumes reach at least restart.threshold.bytes.
minifi.disk.space.watchdog.enable=true
minifi.disk.space.watchdog.interval.ms=15000
minifi.disk.space.watchdog.stop.threshold.bytes=104857600
minifi.disk.space.watchdog.restart.threshold.bytes=157286400

## Enabling C2 Uncomment each of the following options
## define those with missing options
nifi.c2.enable=true
## define protocol parameters
## The default is CoAP, if that extension is built. 
## Alternatively, you may use RESTSender if http-curl is built
nifi.c2.agent.protocol.class=RESTSender
## base URL of the c2 server,
## very likely the same base url of rest urls
nifi.c2.flow.base.url=http://EFM_SERVER_IP:10080/efm/api/c2-protocol/
nifi.c2.rest.url=http://EFM_SERVER_IP:10080/efm/api/c2-protocol/heartbeat
nifi.c2.rest.url.ack=http://EFM_SERVER_IP:10080/efm/api/c2-protocol/acknowledge
nifi.c2.root.classes=DeviceInfoNode,AgentInformation,FlowInformation
## Minimize heartbeat payload size by excluding agent manifest from the heartbeat
nifi.c2.full.heartbeat=false
## heartbeat 4 times a second
nifi.c2.agent.heartbeat.period=250
## define parameters about your agent 
nifi.c2.agent.class=MiNiFiCPP_DAI_MOJO_PY_1
nifi.c2.agent.identifier=MiNiFiCPP_DAI_MOJO_PY_001
## define metrics reported
nifi.c2.root.class.definitions=metrics
nifi.c2.root.class.definitions.metrics.name=metrics
nifi.c2.root.class.definitions.metrics.metrics=typedmetrics
nifi.c2.root.class.definitions.metrics.metrics.typedmetrics.name=RuntimeMetrics
nifi.c2.root.class.definitions.metrics.metrics.queuemetrics.name=QueueMetrics
nifi.c2.root.class.definitions.metrics.metrics.queuemetrics.classes=QueueMetrics
nifi.c2.root.class.definitions.metrics.metrics.typedmetrics.classes=ProcessMetrics,SystemInformation
nifi.c2.root.class.definitions.metrics.metrics.processorMetrics.name=ProcessorMetric
nifi.c2.root.class.definitions.metrics.metrics.processorMetrics.classes=GetFileMetrics

## enable the controller socket provider on port 9998
## off by default. C2 must be enabled to support these
controller.socket.host=localhost
controller.socket.port=9998

#JNI properties
nifi.framework.dir=${MINIFI_HOME}/minifi-jni/lib
nifi.nar.directory=${MINIFI_HOME}/minifi-jni/nars
nifi.nar.deploy.directory=${MINIFI_HOME}/minifi-jni/nardeploy
nifi.nar.docs.directory=${MINIFI_HOME}/minifi-jni/nardocs
# must be comma separated 
nifi.jvm.options=-Xmx1G
nifi.python.processor.dir=${MINIFI_HOME}/minifi-python/,${MINIFI_HOME}/minifi-python/h2o/
